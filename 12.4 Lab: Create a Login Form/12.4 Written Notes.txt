-> users and user authentication lesson: lab - create a login form  
    -> this lab focuses on creating a login form with flask and flask-wtf (flask extension for forms)  
    -> you'll define the form fields, build the template to display it, and be ready for integrating user login functionality later  

-> login form  
    -> create a class derived from `flaskform` to define the login form  
    -> store the form class in the `auth/forms.py` file  

-> form fields  
    1. **email field**:  
        -> use a `stringfield` for the email address  
        -> apply these validators:  
            -> `datarequired()`: ensures the field is not empty  
            -> `length(min=1, max=64)`: limits the email length to a maximum of 64 characters  
            -> `email()`: validates that the entered value is a valid email address  
    2. **password field**:  
        -> use a `passwordfield` for the password  
        -> this field will be required for form submission  
    3. **remember me field**:  
        -> use a `booleanfield` for the "remember me" checkbox (to keep users logged in for a while)  
        -> this field will simply have a label and doesn't require additional logic for now  

-> template  
    -> define the template that will display the login form  
    -> store the template in `templates/auth/login.html`  
    -> remember to inherit from the base template (`base.html`)  

-> summary of the steps  
    1. create a `loginform` class in `auth/forms.py`  
    2. define the fields: `email`, `password`, and `remember_me` with appropriate validation  
    3. build a `login.html` template that renders the form  
    4. the view function for handling form submission will be covered later in another lesson  

-> outcome  
    -> you'll have a basic login form ready to use for handling user authentication  
